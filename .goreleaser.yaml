# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 1

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    # you may remove this if you don't need go generate
    - go generate ./...

builds:
  - env:
      - CGO_ENABLED=0
    targets:
      - go_first_class
      - linux_amd64
      - linux_arm64
      - darwin_amd64
      - darwin_arm64

dockers:
  - image_templates:
      - "{{ envOrDefault `DOCKER_PUBLISH_HOST` `example.com` }}/{{ .ProjectName }}:{{ .Version }}-amd64"
    goarch: amd64
    dockerfile: Dockerfile
    use: docker
    build_flag_templates:
      - --platform=linux/amd64
  - image_templates:
      - "{{ envOrDefault `DOCKER_PUBLISH_HOST` `example.com` }}/{{ .ProjectName }}:{{ .Version }}-arm64"
    goarch: arm64
    dockerfile: Dockerfile
    use: docker
    build_flag_templates:
      - --platform=linux/arm64

docker_manifests:
  - name_template: "{{ envOrDefault `DOCKER_PUBLISH_HOST` `example.com` }}/{{ .ProjectName }}:{{ .Version }}"
    use: docker
    image_templates:
      - "{{ envOrDefault `DOCKER_PUBLISH_HOST` `example.com` }}/{{ .ProjectName }}:{{ .Version }}-amd64"
      - "{{ envOrDefault `DOCKER_PUBLISH_HOST` `example.com` }}/{{ .ProjectName }}:{{ .Version }}-arm64"

archives:
  - format: tar.gz
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        format: zip

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
